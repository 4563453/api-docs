name: Update BTC/EUR report.json

on:
  schedule:
    - cron: '0 7 * * *'   # 07:00 UTC ≈ 09:00 Europe/Berlin
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: update-report
  cancel-in-progress: false

jobs:
  fetch-and-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Fetch JSON from php proxy (robust)
        id: fetch
        shell: bash
        run: |
          set -euo pipefail
          URL="https://www.m-itservices.de/report/eQeQDQQ424234234WERDWFEGEFASDFWASDFASDF.php?tz=Europe/Berlin"
          TMP="$(mktemp)"
          # 3 Versuche mit Backoff, sauberer UA
          for i in 1 2 3; do
            if curl -fsSL --max-time 25 \
              -H "User-Agent: GitHubActions/1.0 (+https://github.com/actions)" \
              "$URL" -o "$TMP"; then
              break
            fi
            sleep $((i*2))
          done
          # Wenn Abruf scheitert: Workflow grün beenden (keine roten Builds)
          if [ ! -s "$TMP" ]; then
            echo "WARN: Kein JSON erhalten – Abbruch ohne Fehler."
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          # JSON validieren und normalisieren
          jq . "$TMP" > report.json
          echo "changed=true" >> "$GITHUB_OUTPUT"

      - name: Commit & push if changed
        if: steps.fetch.outputs.changed == 'true'
        shell: bash
        run: |
          set -euo pipefail
          # Nur committen, wenn sich der Inhalt wirklich geändert hat
          if git diff --quiet -- report.json; then
            echo "Keine Änderungen an report.json."
            exit 0
          fi
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # [skip ci] verhindert, dass dein Hugo-Workflow auf diesen Commit anspringt
          git add report.json
          git commit -m "chore: update report.json [skip ci]"
          git push
