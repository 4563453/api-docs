<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>API-Docs</title>
    <link>https://glimesh.github.io/api-docs/</link>
    <description>Recent content on API-Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://glimesh.github.io/api-docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://glimesh.github.io/api-docs/docs/api/query-api/basic-query/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://glimesh.github.io/api-docs/docs/api/query-api/basic-query/</guid>
      <description>Glimesh API Requests #  This is a basic tutorial for communicating with the Glimesh API. This guide assumes you have a client ID or an access token from a user. Having basic GraphQL knowledge would also be helpful.
 New to GraphQL? This tutorial explains the basics. https://graphql.org/learn/schema/
 Authentication #  All requests made to Glimesh must contain the proper authentication. The authentication value should be included as a header of the request.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://glimesh.github.io/api-docs/docs/api/query-api/nodejs/node-query/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://glimesh.github.io/api-docs/docs/api/query-api/nodejs/node-query/</guid>
      <description>Glimesh API Requests With NodeJS #  This is a basic tutorial for communicating with the Glimesh API using NodeJS. This guide assumes you know basic JS and have an access token from a user. You can use a client ID if you do not yet have a token. Having basic GraphQL knowledge would also be helpful.
 Need a refresh? This tutorial explains the basics of graphql. https://graphql.org/learn/schema/
 Creating the Project #  We need to create a basic project.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://glimesh.github.io/api-docs/docs/authencation/accesstoken/accesstoken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://glimesh.github.io/api-docs/docs/authencation/accesstoken/accesstoken/</guid>
      <description>Access Tokens #  An access token can be used to query the Glimesh API on behalf of a user. You can also get info about the user that the token belongs to.
Requesting A Token #  Before requesting a token you must have a developer application. You will need your client ID, secret ID, and redirect URL. First you need to have a user authenticate with your app. The user must be directed to https://glimesh.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://glimesh.github.io/api-docs/docs/authencation/accesstoken/nodejs/node-access-token/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://glimesh.github.io/api-docs/docs/authencation/accesstoken/nodejs/node-access-token/</guid>
      <description>Getting User Tokens With NodeJS #  This is a basic tutorial for getting an auth token from a user using Oauth with NodeJS. This guide assumes you know basic JS and understand the workings of Oauth 2.
 Need a refresh? This tutorial explains the basics of Oauth 2 https://darutk.medium.com/the-simplest-guide-to-oauth-2-0-8c71bd9a15bb
 Creating the Project #  We need to create a basic project. In your terminal type:
npm init -y</description>
    </item>
    
    <item>
      <title></title>
      <link>https://glimesh.github.io/api-docs/docs/authencation/refreshtoken/refreshtoken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://glimesh.github.io/api-docs/docs/authencation/refreshtoken/refreshtoken/</guid>
      <description>Refresh Tokens #  A refresh token allows you to get a new access token without having your user authenticate again. It is a standard part of OAuth 2.
 Looking for authentication flow? Start with access tokens
 Refreshing A Token #  Refresh tokens are sent when you request an access token. You can pull them from the data that Glimesh sends you.
{ access_token: &amp;#39;qwertyuiopo1234567890&amp;#39;, created_at: &amp;#39;2020-12-14T15:15:29&amp;#39;, expires_in: 21600, refresh_token: &amp;#39;qwertyuiop0987654321&amp;#39;, scope: &amp;#39;public email chat streamkey&amp;#39;, token_type: &amp;#39;bearer&amp;#39; } You can refresh a token at any time.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://glimesh.github.io/api-docs/docs/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://glimesh.github.io/api-docs/docs/contributing/</guid>
      <description>Contributing #  Thanks for wanting to contribute to the api-docs! We are grateful for your help.
Contributing to the API Docs. #  Anyone can contribute to the docs. We only ask that you follow a few guidelines when contributing.
  Follow the file structure. Each topic (or sub-topic) has language specific folders and a basic guide. Inside each language folder there should be a tutorial and a code file if applicable.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://glimesh.github.io/api-docs/docs/dev-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://glimesh.github.io/api-docs/docs/dev-app/</guid>
      <description>Developer Application #  Although making an application is easy, developers new to OAuth may find some of it confusing. This tutorial will explain the basics of what information is asked for and what is it used for.
 Ready to make your application? Start here
 Name #  The name of your project is a user friendly name for your application. Both Glimesh and your users will see this when they authenticate with your app.</description>
    </item>
    
  </channel>
</rss>
