<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>API-Docs</title>
    <link>https://glimesh.github.io/api-docs/docs/api/live-updates/</link>
    <description>Recent content on API-Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://glimesh.github.io/api-docs/docs/api/live-updates/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://glimesh.github.io/api-docs/docs/api/live-updates/channels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://glimesh.github.io/api-docs/docs/api/live-updates/channels/</guid>
      <description>Channel Changes #  Using graphQL subscriptions we can listen for changes to a channel without making repeated queries! Before starting this tutorial you should understand basic graphQL and have a method of authentication. Completing our websocket tutorial will also be helpful.
 Need authentication? Start with access tokens
  Websocket tutorial can be found here
 Selecting a Channel #  Before we can subscribe to a user we need a channel ID.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://glimesh.github.io/api-docs/docs/api/live-updates/followers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://glimesh.github.io/api-docs/docs/api/live-updates/followers/</guid>
      <description>Follower Alerts #  This is a tutorial for follow alerts. This guide assumes you have a client ID or an access token from a user. You should also have a websocket connection open from this tutorial. Having basic GraphQL knowledge would also be helpful.
 New to GraphQL? This tutorial explains the basics. https://graphql.org/learn/schema/
 Building the Subscription #  Follow alerts are made of a standard subscription. The streamer ID of the channel that you want to have alerts for is required.</description>
    </item>
    
  </channel>
</rss>
